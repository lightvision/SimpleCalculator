/**
 * Calculator multiplu
 *
 * Calculatorul include:
 * - calculator simplu
 * - calculator de distante (kilometri <-> mile) - calculator de temperatura
 * (Celsius <-> Fahrenheit)
 *
 * @author Marius-Florinel Ionel, Informatica ID, anul 3
 * @copyright Marius Ionel 2025
 */
package routmmariusionel;

import java.awt.Frame;
import java.awt.event.WindowEvent;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Locale;
import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import routmmariusionel.resources.LanguageManager;

/**
 *
 * @author Marius
 */
public class SimpleCalculator extends javax.swing.JFrame {

    // Listele de butoane invalide pentru fiecare tip de calculator
    // Calculatorul principal va avea afisate toate butoanele
    private final List<String> distanceCalculatorInvalidButtons = Arrays.asList("jButton8", "jButtonAdd");
    private final List<String> temperatureCalculatorInvalidButtons = Arrays.asList("jButton8", "jButtonAdd");
    private String sourceMenu = null;
    private String destinationMenu = "BasicCalculator";

    // Variabile comune
    private static boolean isUpdating = false; // Previne ciclurile infinite
    private static char decimalSeparator = new DecimalFormatSymbols(Locale.getDefault()).getDecimalSeparator();

    // Variabile pentru calculatorul numeric
    private String currentOperator = "";
    private double firstOperand = 0;
    private boolean isSecondOperand = false;

    /**
     * Creates new form SimpleCalculator
     */
    public SimpleCalculator() {
        initComponents();

        // Configurăm funcționalitățile calculatoarelor
        setupDistanceConverter();
        setupTemperatureConverter();
        setupNumericCalculator();

        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowActivated(java.awt.event.WindowEvent evt) {
                jTextFieldDisplay.requestFocusInWindow(); // Forțează focusul pe activare
            }

        });
        
         this.addKeyListener(new java.awt.event.KeyAdapter() {
        @Override
        public void keyPressed(java.awt.event.KeyEvent evt) {
            handleKeyPress(evt);
        }
    });

        LanguageManager.setLanguage("ro");
        updateAllTexts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrameDistanceCalculator = new javax.swing.JFrame();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jPanelDistanceCalcButtons = new javax.swing.JPanel();
        jFrameTemperatureCalculator = new javax.swing.JFrame();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jPanelTemperatureCalcButtons = new javax.swing.JPanel();
        jDialogAboutCalculator = new javax.swing.JDialog();
        jLabelAboutCalculator = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaAboutCalculator = new javax.swing.JTextArea();
        jButtonOK = new javax.swing.JButton();
        buttonGroupCalculatorMenu = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTextFieldDisplay = new javax.swing.JTextField();
        jPanelBasicCalcButtons = new javax.swing.JPanel();
        jButtonClear = new javax.swing.JButton();
        jButtonParanthesis = new javax.swing.JButton();
        jButtonPercent = new javax.swing.JButton();
        jButtonDivide = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButtonMultiply = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButtonSubtract = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonToggleSign = new javax.swing.JButton();
        jButton0 = new javax.swing.JButton();
        jButtonDecimal = new javax.swing.JButton();
        jButtonEquals = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuCalculatorRadio = new javax.swing.JMenu();
        jRadioMenuSimpleCalculator = new javax.swing.JRadioButtonMenuItem();
        jRadioMenuDistanceCalculator = new javax.swing.JRadioButtonMenuItem();
        jRadioMenuTemperatureCalculator = new javax.swing.JRadioButtonMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuExit = new javax.swing.JMenuItem();
        jMenuSettings2 = new javax.swing.JMenu();
        jMenuSettingsLanguage2 = new javax.swing.JMenuItem();
        jMenuAbout = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();

        jFrameDistanceCalculator.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closingDistanceCalculator(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Kilometri:");

        jTextField3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Mile:");

        jTextField7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField7)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jPanelDistanceCalcButtons.setLayout(new java.awt.GridLayout(5, 4, 5, 5));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelDistanceCalcButtons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelDistanceCalcButtons, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jFrameDistanceCalculatorLayout = new javax.swing.GroupLayout(jFrameDistanceCalculator.getContentPane());
        jFrameDistanceCalculator.getContentPane().setLayout(jFrameDistanceCalculatorLayout);
        jFrameDistanceCalculatorLayout.setHorizontalGroup(
            jFrameDistanceCalculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrameDistanceCalculatorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jFrameDistanceCalculatorLayout.setVerticalGroup(
            jFrameDistanceCalculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrameDistanceCalculatorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jFrameTemperatureCalculator.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closingTemperatureCalculator(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Celsius:");

        jTextField5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Fahrenheit:");

        jTextField8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField8)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jPanelTemperatureCalcButtons.setLayout(new java.awt.GridLayout(5, 4, 5, 5));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelTemperatureCalcButtons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelTemperatureCalcButtons, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jFrameTemperatureCalculatorLayout = new javax.swing.GroupLayout(jFrameTemperatureCalculator.getContentPane());
        jFrameTemperatureCalculator.getContentPane().setLayout(jFrameTemperatureCalculatorLayout);
        jFrameTemperatureCalculatorLayout.setHorizontalGroup(
            jFrameTemperatureCalculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrameTemperatureCalculatorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jFrameTemperatureCalculatorLayout.setVerticalGroup(
            jFrameTemperatureCalculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrameTemperatureCalculatorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jDialogAboutCalculator.setTitle("Despre calculator");
        jDialogAboutCalculator.setAlwaysOnTop(true);
        jDialogAboutCalculator.setModal(true);

        jLabelAboutCalculator.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabelAboutCalculator.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelAboutCalculator.setText("Despre Calculator Simplu");
        jLabelAboutCalculator.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextAreaAboutCalculator.setEditable(false);
        jTextAreaAboutCalculator.setColumns(20);
        jTextAreaAboutCalculator.setRows(5);
        jTextAreaAboutCalculator.setText("Exemplu de mesaj mai lung pentru Calculator");
        jTextAreaAboutCalculator.setBorder(null);
        jTextAreaAboutCalculator.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        jTextAreaAboutCalculator.setEnabled(false);
        jScrollPane1.setViewportView(jTextAreaAboutCalculator);

        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialogAboutCalculatorLayout = new javax.swing.GroupLayout(jDialogAboutCalculator.getContentPane());
        jDialogAboutCalculator.getContentPane().setLayout(jDialogAboutCalculatorLayout);
        jDialogAboutCalculatorLayout.setHorizontalGroup(
            jDialogAboutCalculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogAboutCalculatorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogAboutCalculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelAboutCalculator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogAboutCalculatorLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonOK, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jDialogAboutCalculatorLayout.setVerticalGroup(
            jDialogAboutCalculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogAboutCalculatorLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabelAboutCalculator)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonOK)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextFieldDisplay.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jTextFieldDisplay.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldDisplay)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTextFieldDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelBasicCalcButtons.setLayout(new java.awt.GridLayout(5, 4, 5, 5));

        jButtonClear.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonClear.setText("C");
        jPanelBasicCalcButtons.add(jButtonClear);

        jButtonParanthesis.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonParanthesis.setText("( )");
        jPanelBasicCalcButtons.add(jButtonParanthesis);

        jButtonPercent.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonPercent.setText("%");
        jPanelBasicCalcButtons.add(jButtonPercent);

        jButtonDivide.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonDivide.setText("/");
        jPanelBasicCalcButtons.add(jButtonDivide);

        jButton7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton7.setText("7");
        jPanelBasicCalcButtons.add(jButton7);

        jButton8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton8.setText("8");
        jPanelBasicCalcButtons.add(jButton8);

        jButton9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton9.setText("9");
        jPanelBasicCalcButtons.add(jButton9);

        jButtonMultiply.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonMultiply.setText("X");
        jButtonMultiply.setName("jButtonMultiply"); // NOI18N
        jPanelBasicCalcButtons.add(jButtonMultiply);

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton4.setText("4");
        jPanelBasicCalcButtons.add(jButton4);

        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton5.setText("5");
        jPanelBasicCalcButtons.add(jButton5);

        jButton6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton6.setText("6");
        jPanelBasicCalcButtons.add(jButton6);

        jButtonSubtract.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonSubtract.setText("-");
        jPanelBasicCalcButtons.add(jButtonSubtract);

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton1.setText("1");
        jPanelBasicCalcButtons.add(jButton1);

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton2.setText("2");
        jPanelBasicCalcButtons.add(jButton2);

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton3.setText("3");
        jPanelBasicCalcButtons.add(jButton3);

        jButtonAdd.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonAdd.setText("+");
        jPanelBasicCalcButtons.add(jButtonAdd);

        jButtonToggleSign.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonToggleSign.setText("+/-");
        jPanelBasicCalcButtons.add(jButtonToggleSign);

        jButton0.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton0.setText("0");
        jPanelBasicCalcButtons.add(jButton0);

        jButtonDecimal.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonDecimal.setText(",");
        jButtonDecimal.setToolTipText("");
        jPanelBasicCalcButtons.add(jButtonDecimal);

        jButtonEquals.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonEquals.setText("=");
        jPanelBasicCalcButtons.add(jButtonEquals);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelBasicCalcButtons, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBasicCalcButtons, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenuCalculatorRadio.setText("menu.Calculator");

        buttonGroupCalculatorMenu.add(jRadioMenuSimpleCalculator);
        jRadioMenuSimpleCalculator.setSelected(true);
        jRadioMenuSimpleCalculator.setText("menu.Calculator.SimpleCalculator");
        jRadioMenuSimpleCalculator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioMenuSimpleCalculatorActionPerformed(evt);
            }
        });
        jMenuCalculatorRadio.add(jRadioMenuSimpleCalculator);

        buttonGroupCalculatorMenu.add(jRadioMenuDistanceCalculator);
        jRadioMenuDistanceCalculator.setText("menu.Calculator.DistanceCalculator");
        jRadioMenuDistanceCalculator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioMenuDistanceCalculatorActionPerformed(evt);
            }
        });
        jMenuCalculatorRadio.add(jRadioMenuDistanceCalculator);

        buttonGroupCalculatorMenu.add(jRadioMenuTemperatureCalculator);
        jRadioMenuTemperatureCalculator.setText("menu.Calculator.TemperatureConvertor");
        jRadioMenuTemperatureCalculator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioMenuTemperatureCalculatorActionPerformed(evt);
            }
        });
        jMenuCalculatorRadio.add(jRadioMenuTemperatureCalculator);
        jMenuCalculatorRadio.add(jSeparator3);

        jMenuExit.setText("menu.Calculator.Exit");
        jMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuExitActionPerformed(evt);
            }
        });
        jMenuCalculatorRadio.add(jMenuExit);

        jMenuBar.add(jMenuCalculatorRadio);

        jMenuSettings2.setText("menu.Settings");

        jMenuSettingsLanguage2.setText("Limba");
        jMenuSettings2.add(jMenuSettingsLanguage2);

        jMenuBar.add(jMenuSettings2);

        jMenuAbout.setText("menu.About");

        jMenuItemAbout.setText("menu.About.AboutCalculator");
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenuAbout.add(jMenuItemAbout);

        jMenuBar.add(jMenuAbout);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioMenuSimpleCalculatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioMenuSimpleCalculatorActionPerformed
        // actualizam sursa si destinatia
        sourceMenu = destinationMenu;
        destinationMenu = "BasicCalculator";

        if (sourceMenu.equals(destinationMenu)) {
            return;
        }

        this.setJMenuBar(this.getJMenuBar());
        hideAllWindows();
        this.pack();

        moveCalcButtons(sourceMenu, destinationMenu);

        this.setVisible(true);
    }//GEN-LAST:event_jRadioMenuSimpleCalculatorActionPerformed

    private void jRadioMenuDistanceCalculatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioMenuDistanceCalculatorActionPerformed
        // actualizam sursa si destinatia
        sourceMenu = destinationMenu;
        destinationMenu = "DistanceCalculator";

        if (sourceMenu.equals(destinationMenu)) {
            return;
        }

        jFrameDistanceCalculator.setJMenuBar(this.jMenuBar);
        jFrameDistanceCalculator.pack();
        hideAllWindows();

        moveCalcButtons(sourceMenu, destinationMenu);

        jFrameDistanceCalculator.setVisible(true);
    }//GEN-LAST:event_jRadioMenuDistanceCalculatorActionPerformed

    private void jRadioMenuTemperatureCalculatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioMenuTemperatureCalculatorActionPerformed
        // actualizam sursa si destinatia
        sourceMenu = destinationMenu;
        destinationMenu = "TemperatureCalculator";

        if (sourceMenu.equals(destinationMenu)) {
            return;
        }

        jFrameTemperatureCalculator.setJMenuBar(this.jMenuBar);
        jFrameTemperatureCalculator.pack();
        hideAllWindows();

        moveCalcButtons(sourceMenu, destinationMenu);
        jFrameTemperatureCalculator.setVisible(true);
    }//GEN-LAST:event_jRadioMenuTemperatureCalculatorActionPerformed

    private void jMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuExitActionPerformed
        dispatchEvent(new java.awt.event.WindowEvent(this, java.awt.event.WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jMenuExitActionPerformed

    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
        jDialogAboutCalculator.pack();
        jDialogAboutCalculator.setVisible(true);
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        // nu are sens sa pastram dialogul in memorie, asa ca folosim dispose()
        jDialogAboutCalculator.dispose();
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void closingDistanceCalculator(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closingDistanceCalculator
        // trebuie sa iesim din aplicatie
        dispatchEvent(new java.awt.event.WindowEvent(this, java.awt.event.WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_closingDistanceCalculator

    private void closingTemperatureCalculator(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closingTemperatureCalculator
        dispatchEvent(new java.awt.event.WindowEvent(this, java.awt.event.WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_closingTemperatureCalculator

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimpleCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimpleCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimpleCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimpleCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimpleCalculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupCalculatorMenu;
    private javax.swing.JButton jButton0;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonDecimal;
    private javax.swing.JButton jButtonDivide;
    private javax.swing.JButton jButtonEquals;
    private javax.swing.JButton jButtonMultiply;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JButton jButtonParanthesis;
    private javax.swing.JButton jButtonPercent;
    private javax.swing.JButton jButtonSubtract;
    private javax.swing.JButton jButtonToggleSign;
    private javax.swing.JDialog jDialogAboutCalculator;
    private javax.swing.JFrame jFrameDistanceCalculator;
    private javax.swing.JFrame jFrameTemperatureCalculator;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelAboutCalculator;
    private javax.swing.JMenu jMenuAbout;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuCalculatorRadio;
    private javax.swing.JMenuItem jMenuExit;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenu jMenuSettings2;
    private javax.swing.JMenuItem jMenuSettingsLanguage2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanelBasicCalcButtons;
    private javax.swing.JPanel jPanelDistanceCalcButtons;
    private javax.swing.JPanel jPanelTemperatureCalcButtons;
    private javax.swing.JRadioButtonMenuItem jRadioMenuDistanceCalculator;
    private javax.swing.JRadioButtonMenuItem jRadioMenuSimpleCalculator;
    private javax.swing.JRadioButtonMenuItem jRadioMenuTemperatureCalculator;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTextArea jTextAreaAboutCalculator;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextFieldDisplay;
    // End of variables declaration//GEN-END:variables

    /**
     *
     */
    private void updateAllTexts() {
        // Actualizăm mai întâi elementele de meniu
//    System.out.println("routmmariusionel.SimpleCalculator.updateAllTexts()");

        javax.swing.JMenuBar menuBar = getJMenuBar();
        if (menuBar != null) {
            for (int i = 0; i < menuBar.getMenuCount(); i++) {
                javax.swing.JMenu menu = menuBar.getMenu(i);
                if (menu != null) {
                    // Înlocuim textul meniului principal dacă există traducere
                    String localizedText = LanguageManager.getString(menu.getText(), true);
                    if (localizedText != null) {
//                    System.out.println("Meniu principal actualizat: " + localizedText);
                        menu.setText(localizedText);
                    }

                    // Iterăm prin elementele submeniu (JMenuItem)
                    for (int j = 0; j < menu.getItemCount(); j++) {
                        javax.swing.JMenuItem menuItem = menu.getItem(j);
                        if (menuItem != null) {
                            // Înlocuim textul submeniului dacă există traducere
                            String localizedSubMenuText = LanguageManager.getString(menuItem.getText(), true);
                            if (localizedSubMenuText != null) {
//                            System.out.println("Submeniu actualizat: " + localizedSubMenuText);
                                menuItem.setText(localizedSubMenuText);
                            }
                        }
                    }
                }
            }
        }
    }

    /**
     *
     */
    private void hideAllWindows() {
        for (Frame frame : Frame.getFrames()) {
            if (frame.isVisible()) {
                frame.setVisible(false);
            }
        }
    }

    /**
     * Mutam butoanele din calculatorul curent in noul calculator
     *
     * @param sourceMenu
     * @param destinationMenu
     */
    private void moveCalcButtons(String sourceMenu, String destinationMenu) {
        //System.out.println("sourceMenu: " + sourceMenu + " destinationMenu: " + destinationMenu);
        // determinam panoul susrsa si panoul destinatie pentru a muta butoanele calculatorului
        if (sourceMenu == destinationMenu) {
            return;
        }
        javax.swing.JPanel sourcePanel = getPanelButtonsForMenu(sourceMenu);
        javax.swing.JPanel destinationPanel = getPanelButtonsForMenu(destinationMenu);

        // determinam lista de butoane care trebuiesc inactivate
        List<String> invalidButtonNames = switch (destinationMenu) {
            case "DistanceCalculator" ->
                distanceCalculatorInvalidButtons;
            case "TemperatureCalculator" ->
                temperatureCalculatorInvalidButtons;
            default ->
                // Nici o dezactivare pentru calculatorul principal
                Collections.emptyList();
        };

        // mutam butoanele calculatorului din panoul sursa in cel de destinatie
        java.awt.Component[] components = sourcePanel.getComponents();
        for (java.awt.Component component : components) {
            if (component instanceof JButton button) {
                // reactivam butonul
                button.setEnabled(true);

                // mutam butonul
                sourcePanel.remove(button);
                destinationPanel.add(button);

                // dezactivam butoanele invalide in panoul de destinatie
                String buttonName = button.getName();
                if (buttonName != null && invalidButtonNames.contains(buttonName)) {
                    button.setEnabled(false);
                }
            }
        }

        // fortam redesenarea interfetei grafice
        sourcePanel.revalidate();
        sourcePanel.repaint();
        destinationPanel.revalidate();
        destinationPanel.repaint();

        java.awt.Window destinationWindow = SwingUtilities.getWindowAncestor(destinationPanel);
        destinationWindow.setSize(SwingUtilities.getWindowAncestor(sourcePanel).getSize());
    }

    private javax.swing.JPanel getPanelButtonsForMenu(String menuName) {
        return switch (menuName) {
            case "BasicCalculator" ->
                jPanelBasicCalcButtons;
            case "DistanceCalculator" ->
                jPanelDistanceCalcButtons;
            case "TemperatureCalculator" ->
                jPanelTemperatureCalcButtons;
            default ->
                null;
        };
    }

    private void setupDistanceConverter() {
        // Validare taste
        addNumericKeyListener(jTextField3, jTextField7);

        // Sincronizare bidirecțională
        addSyncListeners(jTextField3, jTextField7, kilometers -> kilometers / 1.60934); // KM -> Mile
        addSyncListeners(jTextField7, jTextField3, miles -> miles * 1.60934);          // Mile -> KM
    }

    private void setupTemperatureConverter() {
        // Validare taste
        addNumericKeyListener(jTextField5, jTextField8);

        // Sincronizare bidirecțională
        addSyncListeners(jTextField5, jTextField8, celsius -> celsius * 9 / 5 + 32); // Celsius -> Fahrenheit
        addSyncListeners(jTextField8, jTextField5, fahrenheit -> (fahrenheit - 32) * 5 / 9); // Fahrenheit -> Celsius
    }

    private void setupNumericCalculator() {
        // Ascultători pentru cifre
        jButton0.addActionListener(e -> appendToDisplay("0"));
        jButton1.addActionListener(e -> appendToDisplay("1"));
        jButton2.addActionListener(e -> appendToDisplay("2"));
        jButton3.addActionListener(e -> appendToDisplay("3"));
        jButton4.addActionListener(e -> appendToDisplay("4"));
        jButton5.addActionListener(e -> appendToDisplay("5"));
        jButton6.addActionListener(e -> appendToDisplay("6"));
        jButton7.addActionListener(e -> appendToDisplay("7"));
        jButton8.addActionListener(e -> appendToDisplay("8"));
        jButton9.addActionListener(e -> appendToDisplay("9"));

        // Ascultători pentru operații
        jButtonAdd.addActionListener(e -> setOperator("+"));
        jButtonSubtract.addActionListener(e -> setOperator("-"));
        jButtonMultiply.addActionListener(e -> setOperator("*"));
        jButtonDivide.addActionListener(e -> setOperator("/"));

        // Egal și resetare
        jButtonEquals.addActionListener(e -> calculateResult());
        jButtonClear.addActionListener(e -> resetCalculator());

        // Schimbare semn
        jButtonToggleSign.addActionListener(e -> toggleSign());
    }

    public static void addNumericKeyListener(JTextField... textFields) {
        java.awt.event.KeyAdapter numericKeyListener = new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
                char c = evt.getKeyChar();
                JTextField source = (JTextField) evt.getSource();
                String text = source.getText();

                // Obține separatorul zecimal specific locale-ului
                DecimalFormatSymbols symbols = new DecimalFormatSymbols(Locale.getDefault());
                char decimalSeparator = symbols.getDecimalSeparator();

                // Permite doar cifre, separatorul zecimal și tastele speciale
                if (!Character.isDigit(c) && c != decimalSeparator
                        && c != java.awt.event.KeyEvent.VK_BACK_SPACE
                        && c != java.awt.event.KeyEvent.VK_DELETE) {
                    evt.consume(); // Ignorăm caracterele invalide
                    return;
                }

                // Permite doar un singur separator zecimal
                if (c == decimalSeparator && text.contains(String.valueOf(decimalSeparator))) {
                    evt.consume(); // Ignorăm al doilea separator
                }
            }
        };

        for (JTextField textField : textFields) {
            textField.addKeyListener(numericKeyListener);
        }
    }

    public static void addSyncListeners(JTextField source, JTextField target, java.util.function.Function<Double, Double> converter) {
        source.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                sync();
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                sync();
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                sync();
            }

            private void sync() {
                if (isUpdating) {
                    return;
                }

                try {
                    isUpdating = true;
                    String text = source.getText().trim().replace(decimalSeparator, '.');
                    if (!text.isEmpty()) {
                        double value = Double.parseDouble(text);
                        double convertedValue = converter.apply(value);
                        target.setText(String.format(Locale.getDefault(), "%,.2f", convertedValue).replace('.', decimalSeparator));
                    } else {
                        target.setText("");
                    }
                } catch (NumberFormatException ex) {
                    target.setText("");
                } finally {
                    isUpdating = false;
                }
            }
        });
    }

    private void appendToDisplay(String text) {
        // Dacă suntem pe al doilea operand, resetăm afișajul
        if (isSecondOperand) {
            jTextFieldDisplay.setText(""); // Resetăm afișajul
            isSecondOperand = false;      // Marcăm că am început să introducem al doilea operand
        }

        // Permitem adăugarea separatorului zecimal doar o singură dată
        if (text.equals(String.valueOf(decimalSeparator))) {
            if (jTextFieldDisplay.getText().contains(String.valueOf(decimalSeparator))) {
                return; // Nu permite al doilea separator zecimal
            }
        }

        // Adăugăm textul la afișaj
        jTextFieldDisplay.setText(jTextFieldDisplay.getText() + text);
    }

    private void setOperator(String operator) {
    try {
        // Obținem primul operand, normalizând separatorul zecimal
        firstOperand = Double.parseDouble(jTextFieldDisplay.getText().replace(decimalSeparator, '.'));
    } catch (NumberFormatException e) {
        jTextFieldDisplay.setText("Error");
        return;
    }

    currentOperator = operator; // Setăm operatorul curent
    isSecondOperand = true;     // Marcăm faptul că urmează al doilea operand
}


    private void calculateResult() {
    if (currentOperator.isEmpty()) {
        jTextFieldDisplay.setText("Error: No operator");
        return;
    }

    try {
        // Obținem al doilea operand, normalizând separatorul zecimal
        String secondOperandText = jTextFieldDisplay.getText().replace(decimalSeparator, '.');
        double secondOperand = Double.parseDouble(secondOperandText);
        double result = 0;

        // Calculăm rezultatul pe baza operatorului curent
        switch (currentOperator) {
            case "+":
                result = firstOperand + secondOperand;
                break;
            case "-":
                result = firstOperand - secondOperand;
                break;
            case "*":
                result = firstOperand * secondOperand;
                break;
            case "/":
                if (secondOperand == 0) {
                    jTextFieldDisplay.setText("Cannot divide by 0");
                    return;
                }
                result = firstOperand / secondOperand;
                break;
            default:
                jTextFieldDisplay.setText("Error: Invalid operator");
                return;
        }

        // Afișăm rezultatul formatat conform locale-ului
        jTextFieldDisplay.setText(String.format(Locale.getDefault(), "%,.2f", result).replace('.', decimalSeparator));

        // Resetăm starea
        currentOperator = ""; // Resetează operatorul după calcul
        isSecondOperand = false; // Permite o nouă operație
        firstOperand = result; // Setăm rezultatul ca operand pentru operațiile ulterioare
    } catch (NumberFormatException e) {
        jTextFieldDisplay.setText("Error: Invalid input");
    }
}


    private void resetCalculator() {
        jTextFieldDisplay.setText(""); // Golește afișajul
        currentOperator = "";          // Resetează operatorul
        firstOperand = 0;              // Resetează primul operand
        isSecondOperand = false;       // Permite o nouă operație
    }

    private void toggleSign() {
        try {
            double value = Double.parseDouble(jTextFieldDisplay.getText());
            value = -value; // Schimbăm semnul
            jTextFieldDisplay.setText(String.format("%.2f", value));
        } catch (NumberFormatException e) {
            jTextFieldDisplay.setText("Error tootle");
        }
    }
    
    private void handleKeyPress(java.awt.event.KeyEvent evt) {
    char keyChar = evt.getKeyChar();

    // Gestionăm cifrele
    if (Character.isDigit(keyChar)) {
        appendToDisplay(String.valueOf(keyChar));
        return;
    }

    // Gestionăm separatorul zecimal
    if (keyChar == decimalSeparator) {
        appendToDisplay(String.valueOf(decimalSeparator));
        return;
    }

    // Gestionăm operatorii
    if (keyChar == '+' || keyChar == '-' || keyChar == '*' || keyChar == '/') {
        setOperator(String.valueOf(keyChar));
        return;
    }

    // Gestionăm tasta Enter (calcul rezultat)
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        calculateResult();
    }
}

//private void setOperator(String operator) {
//    if (!isSecondOperand) {
//        try {
//            firstOperand = Double.parseDouble(jTextFieldDisplay.getText().replace(decimalSeparator, '.'));
//        } catch (NumberFormatException e) {
//            jTextFieldDisplay.setText("Error: Invalid input");
//            return;
//        }
//        isSecondOperand = true; // Indică faptul că urmează al doilea operand
//    }
//    currentOperator = operator; // Setăm operatorul
//}

}
